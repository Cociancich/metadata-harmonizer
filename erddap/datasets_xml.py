#!/usr/bin/env python3
"""

author: Enoc Martínez
institution: Universitat Politècnica de Catalunya (UPC)
email: enoc.martinez@upc.edu
license: MIT
created: 28/4/23
"""


import mooda as md
from metadata.dataset import get_variables
import rich


def generate_datsets_xml(wf: md.WaterFrame, outfile, datafiles="/erddapData/NetCDF_test/",
                         dataset_id="NetCDFs_DATASET_AUTOGENERATED"):
    """
    Generates a XML chunk to add it into ERDDAP's datasets.xml
    """
    rich.print("Generating datasets.xml chunk")
    rich.print(wf.metadata)

    variables = get_variables(wf) + ["SENSOR_ID"]
    variables_str = ", ".join(variables)

    qc_variables = get_variables(wf)
    qc_variables_str = ", ".join(qc_variables)

    variable_tag = "<!-- add variable here -->"
    xml = f"""
<dataset type="EDDTableFromMultidimNcFiles" datasetID="{dataset_id}" active="true">
    <reloadEveryNMinutes>10080</reloadEveryNMinutes>
    <updateEveryNMillis>10000</updateEveryNMillis>
    <fileDir>{datafiles}</fileDir>
    <fileNameRegex>.*</fileNameRegex>
    <recursive>true</recursive>
    <pathRegex>.*</pathRegex>
    <metadataFrom>last</metadataFrom>
    <standardizeWhat>0</standardizeWhat>
    <removeMVRows>true</removeMVRows>
    <sortFilesBySourceNames></sortFilesBySourceNames>
    <fileTableInMemory>false</fileTableInMemory>
    <addAttributes>
        <att name="_NCProperties">null</att>
        <att name="cdm_data_type">TimeSeries</att>                
        <att name="infoUrl">www.fake.url</att>
        <att name="institution">My test insitution</att>        
        <att name="sourceUrl">(local files)</att>
        <att name="standard_name_vocabulary">CF Standard Name Table v70</att>
        <att name="subsetVariables">{qc_variables_str}</att>        
        <att name="cdm_timeseries_variables">{variables_str}</att>
    </addAttributes>
    {variable_tag}    
</dataset>
    """

    data_variable_template = f"""
     <dataVariable>
        <sourceName>SOURCE</sourceName>
        <destinationName>DESTINATION</destinationName>
        <dataType>TYPE</dataType>
        <addAttributes>
        </addAttributes>
    </dataVariable>
{variable_tag}"""

    time_template = f"""
     <dataVariable>
         <sourceName>time</sourceName>
         <destinationName>time</destinationName>
         <dataType>double</dataType>
         <addAttributes>
             <att name="units">seconds since 1970-01-01</att>
             <att name="time_precision">1970-01-01T00:00:00Z</att>         
         </addAttributes>
     </dataVariable>
{variable_tag}"""

    for varname, varmeta in wf.vocabulary.items():
        rich.print(f"[purple]Processing {varname}")

        if varname.endswith("_STD"):
            continue

        if varname == "time":
            xml = xml.replace(variable_tag, time_template)
        else:
            var = data_variable_template
            vartype = "double"
            if varname == "SENSOR_ID":
                vartype = "String"
            elif varname.endswith("_QC"):
                vartype = "int"
            var = var.replace("SOURCE", varname).replace("DESTINATION", varname).replace("TYPE", vartype)

            if varname == "depth":
                meters = """<addAttributes>
            <att name="units">m</att>"""
                var = var.replace("<addAttributes>", meters)  # forced by ERDDAP

            if varname == "SENSOR_ID":
                cf_role = """<addAttributes>
            <att name="cf_role">timeseries_id</att>"""
                var = var.replace("<addAttributes>", cf_role)  # forced by ERDDAP

            xml = xml.replace(variable_tag, var)

    xml = xml.replace(variable_tag, "")
    rich.print(xml)
    with open(outfile, "w") as f:
        f.write(xml)
